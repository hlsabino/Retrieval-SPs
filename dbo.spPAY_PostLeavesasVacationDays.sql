USE PACT2C276
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spPAY_PostLeavesasVacationDays]
	@DocID [int] = null,
	@UserId [int] = 1,
	@LangId [int] = 1
WITH ENCRYPTION, EXECUTE AS CALLER
AS
BEGIN
SET NOCOUNT ON;
DECLARE @PayrollProduct INT,@CrACC INT,@DbAcc INT,@CCID INT,@EMPNODE INT
DECLARE @TABVACATION TABLE(ID INT IDENTITY(1,1),EMPNODE INT,EMPNAME VARCHAR(500),FROMDATE DATETIME,TODATE DATETIME)
DECLARE @TABLEAVESADJUSTMENT TABLE(ID INT IDENTITY(1,1),INVDOCDETAILSID INT,EMPNODE INT,EMPNAME VARCHAR(500),FROMDATE DATETIME,TODATE DATETIME,NOOFDAYS DECIMAL(9,2),REMARKS VARCHAR(500),SELECTED VARCHAR(3))
IF((SELECT COUNT(*) FROM INV_DOCDETAILS WITH(NOLOCK) WHERE DOCID=@DOCID AND STATUSID=369)>0)
BEGIN
	--SELECT @PayrollProduct=ISNULL(VALUE,2) FROM ADM_GlobalPreferences WITH(NOLOCK) WHERE NAME='payrollproduct'					   
	--SET @CCID=(SELECT TOP 1 COSTCENTERID FROM INV_DOCDETAILS WITH(NOLOCK) WHERE DOCID=@DocID)
	--SELECT @CrACC=ISNULL(UserDefaultValue,2) FROM ADM_COSTCENTERDEF WHERE COSTCENTERID=@CCID AND SYSCOLUMNNAME='CreditAccount'
	--SELECT @DbAcc=ISNULL(UserDefaultValue,2) FROM ADM_COSTCENTERDEF WHERE COSTCENTERID=@CCID AND SYSCOLUMNNAME='DebitAccount'
	SET  @EMPNODE=(SELECT TOP 1 TD.dcalpha5
	FROM    INV_DOCDETAILS ID WITH(NOLOCK) INNER JOIN COM_DocTEXTData TD WITH(NOLOCK) ON TD.INVDOCDETAILSID=ID.INVDOCDETAILSID 
	WHERE   ID.COSTCENTERID=40073 AND ID.STATUSID=369 AND ID.DOCID=@DOCID)
	
	INSERT INTO @TABVACATION
	SELECT  DISTINCT C51.DCCCNID51,EMP.NAME,CONVERT(DATETIME,TD.dcAlpha2),CONVERT(DATETIME,TD.dcAlpha3)
	FROM    INV_DOCDETAILS ID WITH(NOLOCK)
			INNER JOIN COM_DocCCData C51 WITH(NOLOCK) ON C51.INVDOCDETAILSID=ID.INVDOCDETAILSID	INNER JOIN COM_DocNumData DN WITH(NOLOCK) ON DN.INVDOCDETAILSID=ID.INVDOCDETAILSID
			INNER JOIN COM_DocTextData TD WITH(NOLOCK) ON TD.INVDOCDETAILSID=ID.INVDOCDETAILSID	INNER JOIN COM_CC50051 EMP WITH(NOLOCK) ON EMP.NODEID=C51.DCCCNID51
	WHERE   TD.tCOSTCENTERID=40072 AND C51.DCCCNID51=@EMPNODE AND ID.STATUSID=369 ORDER BY C51.DCCCNID51
	
	INSERT INTO @TABLEAVESADJUSTMENT
	SELECT  ID.INVDOCDETAILSID,TD.dcAlpha5,EMP.NAME,CONVERT(DATETIME,TD.dcAlpha2),CONVERT(DATETIME,TD.dcAlpha3),ISNULL(DN.DCNUM1,0),'',ISNULL(dcAlpha4,'')
	FROM    INV_DOCDETAILS ID WITH(NOLOCK)
			INNER JOIN COM_DocCCData C51 WITH(NOLOCK) ON C51.INVDOCDETAILSID=ID.INVDOCDETAILSID	INNER JOIN COM_DocNumData DN WITH(NOLOCK) ON DN.INVDOCDETAILSID=ID.INVDOCDETAILSID
			INNER JOIN COM_DocTextData TD WITH(NOLOCK) ON TD.INVDOCDETAILSID=ID.INVDOCDETAILSID	INNER JOIN COM_CC50051 EMP WITH(NOLOCK) ON EMP.NODEID=TD.dcAlpha5
	WHERE   TD.tCOSTCENTERID=40073 AND ID.STATUSID=369 AND TD.dcAlpha5=@EMPNODE AND ID.DOCID=@DOCID AND ISNULL(dcAlpha4,'')='Yes' ORDER BY TD.dcAlpha5
		
	IF((SELECT COUNT(*)  FROM @TABLEAVESADJUSTMENT LA , @TABVACATION VA	WHERE  LA.EMPNODE=VA.EMPNODE AND
		    (
		     CONVERT(DATETIME,LA.FROMDATE) between CONVERT(DATETIME,VA.FROMDATE) and CONVERT(DATETIME,VA.TODATE)
			 or CONVERT(DATETIME,LA.TODATE) between CONVERT(DATETIME,VA.FROMDATE) and CONVERT(DATETIME,VA.TODATE)
			 or CONVERT(DATETIME,VA.FROMDATE) between CONVERT(DATETIME,LA.FROMDATE) and CONVERT(DATETIME,LA.TODATE)
			 or CONVERT(DATETIME,VA.TODATE) between CONVERT(DATETIME,LA.FROMDATE) and CONVERT(DATETIME,LA.TODATE)) )>0)
	BEGIN
		UPDATE @TABLEAVESADJUSTMENT SET REMARKS='Cannot post the document as selected dates already applied as vacation'
		SELECT 'Cannot post the document as selected dates already applied as vacation' AS ExternalFuncErrorMessage
	END
	ELSE
	BEGIN
		IF ((SELECT count(*)  FROM INV_DOCDETAILS ID WITH(NOLOCK), COM_DOCTEXTDATA TD WITH(NOLOCK),COM_DOCCCDATA CC  WITH(NOLOCK)
		     WHERE  TD.tCOSTCENTERID=40072 AND ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND ID.INVDOCDETAILSID=CC.INVDOCDETAILSID AND TD.INVDOCDETAILSID=CC.INVDOCDETAILSID AND CC.DCCCNID51=@EmpNode 
		     AND ID.STATUSID=369 AND isnull(TD.DCALPHA16,'')='No' AND ISNULL(TD.DCALPHA2,'')<>'' AND ISNULL(TD.DCALPHA3,'')<>'' AND ISNULL(TD.DCALPHA1,'')='')>0)
		BEGIN
			UPDATE @TABLEAVESADJUSTMENT SET REMARKS='Please enter the rejoin date for the last vacation'
		END
	END
	SELECT *  FROM @TABLEAVESADJUSTMENT 
	----PRINT 'GENERATE XML'
	------GENERATE XML FOR VACATION LEAVE
	--DECLARE @strQuery nvarchar(max)
	--DECLARE @strResult VARCHAR(100),@ICOUNT INT,@TRCOUNT INT,@REMARKCOUNT INT,@dcAlpha1 DATETIME,@dcAlpha2 DATETIME,@dcAlpha3 DATETIME,@dcAlpha4 VARCHAR(10)
	--DECLARE @dcAlpha5 VARCHAR(10),@dcAlpha6 VARCHAR(10),@dcAlpha7 VARCHAR(10),@dcAlpha22 VARCHAR(10)
	--DECLARE @dcAlpha8 VARCHAR(10),@dcAlpha9 VARCHAR(10),@dcAlpha10 VARCHAR(10),@dcAlpha11 VARCHAR(10),@dcAlpha12 VARCHAR(10),@dcAlpha13 VARCHAR(10),@dcAlpha15 VARCHAR(10),@dcAlpha16 VARCHAR(10),@dcAlpha17 VARCHAR(10),@dcCCNID51 INT
	--DECLARE @INVDOCDETAILSID INT,@INVDOCDETAILSIDNEW INT,@REJOINDATE VARCHAR(30),@NEWDOCID INT
	--DECLARE @RMKS VARCHAR(200)=''
	--DECLARE @VACATIONDAYS DECIMAL(9,2),@APPLIEDDAYS DECIMAL(9,2),@APPROVEDDAYS DECIMAL(9,2),@PAIDDAYS DECIMAL(9,2),@CREDITEDDAYS DECIMAL(9,2),@EXCESSDAYS DECIMAL(9,2),@REMAININGDAYS DECIMAL(9,2),@VACDAYSMESSAGE VARCHAR(MAX)
	--DECLARE @TABVAC TABLE(VACATIONDAYS DECIMAL(9,2),APPLIEDDAYS DECIMAL(9,2),APPROVEDDAYS DECIMAL(9,2),PAIDDAYS DECIMAL(9,2),CREDITEDDAYS DECIMAL(9,2),EXCESSDAYS DECIMAL(9,2),REMAININGDAYS DECIMAL(9,2),FROMDATE DATETIME,TODATE DATETIME,VACDAYSMESSAGE VARCHAR(MAX))
	--DECLARE @OPVACATIONDAYS DECIMAL(9,2),@OPVACATIONSALARY DECIMAL(9,2)
	--SELECT * FROM @TABLEAVESADJUSTMENT
	--SELECT @TRCOUNT=COUNT(*) FROM @TABLEAVESADJUSTMENT
	--SELECT @REMARKCOUNT=COUNT(*)  FROM @TABLEAVESADJUSTMENT  WHERE ISNULL(REMARKS,'')<>''
	--SET @ICOUNT=1
	--set @strQuery=''

	--IF ISNULL(@REMARKCOUNT,0)=0
	--BEGIN
	--	WHILE(@ICOUNT<=@TRCOUNT)
	--	BEGIN
	--		SET @dcAlpha1=''
	--		SET @dcAlpha2=''
	--		SET @dcAlpha3=''
	--		SET @dcAlpha4=''
	--		SET @dcAlpha5=''
	--		SET @dcAlpha6=''
	--		SET @dcAlpha7=''
	--		SET @dcAlpha8=''
	--		SET @dcAlpha9=''
	--		SET @dcAlpha10=''
	--		SET @dcAlpha11=''
	--		SET @dcAlpha12=''
	--		SET @dcAlpha13=''
	--		SET @dcAlpha15=''
	--		SET @dcAlpha16=''
	--		SET @dcAlpha17=''
	--		SET @dcAlpha22=''
	--		SET @INVDOCDETAILSID=0
	--		SET @OPVACATIONDAYS=0
	--		SET @OPVACATIONSALARY=0
	--		--CHECKING VACATION DAYS
	--		--CHECKING FOR VACATION APPLIED DAYS AND RETURN FROM VACATION
	--		IF ((SELECT count(*)  FROM INV_DOCDETAILS ID WITH(NOLOCK), COM_DOCTEXTDATA TD WITH(NOLOCK),COM_DOCCCDATA CC  WITH(NOLOCK)
	--		WHERE  ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND ID.INVDOCDETAILSID=CC.INVDOCDETAILSID AND TD.INVDOCDETAILSID=CC.INVDOCDETAILSID AND CC.DCCCNID51=@EmpNode AND ID.COSTCENTERID=40072 
	--		AND isnull(TD.DCALPHA16,'')='No' AND ISNULL(TD.DCALPHA2,'')<>'' AND ISNULL(TD.DCALPHA3,'')<>'' AND ISNULL(TD.DCALPHA1,'')<>'')>0)
	--		BEGIN
	--			SELECT TOP 1 @OPVACATIONDAYS=ISNULL(dcAlpha12,0),@OPVACATIONSALARY=0 FROM INV_DOCDETAILS ID WITH(NOLOCK), COM_DOCTEXTDATA TD WITH(NOLOCK),COM_DOCCCDATA CC  WITH(NOLOCK)
	--			WHERE  ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND ID.INVDOCDETAILSID=CC.INVDOCDETAILSID AND TD.INVDOCDETAILSID=CC.INVDOCDETAILSID AND CC.DCCCNID51=@EmpNode AND ID.COSTCENTERID=40072 
	--			AND ISNULL(TD.DCALPHA2,'')<>'' AND ISNULL(TD.DCALPHA3,'')<>'' AND ISNULL(TD.DCALPHA1,'')<>''   ORDER BY convert(float,dcAlpha12) asc--ORDER BY CONVERT(DATETIME,ID.DOCDATE) DESC
	--		END
	--		--CHECKING FOR VACATION APPLIED AS ENCASH
	--		ELSE IF ((SELECT count(*)  FROM INV_DOCDETAILS ID WITH(NOLOCK), COM_DOCTEXTDATA TD WITH(NOLOCK),COM_DOCCCDATA CC  WITH(NOLOCK)
	--		WHERE  ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND ID.INVDOCDETAILSID=CC.INVDOCDETAILSID AND TD.INVDOCDETAILSID=CC.INVDOCDETAILSID AND CC.DCCCNID51=@EmpNode AND ID.COSTCENTERID=40072 
	--		AND isnull(TD.DCALPHA16,'')='Yes')>0)
	--		BEGIN
	--			SELECT TOP 1 @OPVACATIONDAYS=isnull((convert(decimal(9,2),dcAlpha12)-convert(decimal(9,2),dcAlpha14)),0) ,@OPVACATIONSALARY=0 FROM INV_DOCDETAILS ID WITH(NOLOCK), COM_DOCTEXTDATA TD WITH(NOLOCK),COM_DOCCCDATA CC  WITH(NOLOCK)
	--			WHERE  ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND ID.INVDOCDETAILSID=CC.INVDOCDETAILSID AND TD.INVDOCDETAILSID=CC.INVDOCDETAILSID AND CC.DCCCNID51=@EmpNode AND ID.COSTCENTERID=40072 
	--			AND isnull(TD.DCALPHA16,'')='Yes'   ORDER BY convert(float,dcAlpha12) asc--ORDER BY CONVERT(DATETIME,ID.DOCDATE) DESC
	--		END
	--		ELSE
	--		BEGIN
	--			SELECT @OPVACATIONDAYS=ISNULL(OPVACATIONDAYS,0),@OPVACATIONSALARY=ISNULL(OPVACATIONSALARY,0) FROM COM_CC50051 WITH(NOLOCK) WHERE NODEID=@EmpNode
	--		END	 
	--		--
	--		print @OPVACATIONDAYS
	--		--select * from @TABLEAVESADJUSTMENT
	--		SELECT @dcAlpha2=FROMDATE,@dcAlpha3=TODATE,@dcAlpha22=@OPVACATIONDAYS,--@dcAlpha4=NOOFDAYS,@dcAlpha8=NOOFDAYS,@dcAlpha9=NOOFDAYS,@dcAlpha10=NOOFDAYS,@dcAlpha13='No',@dcAlpha15='No',@dcAlpha16='No',@dcAlpha17='No',
	--			@dcCCNID51=@EMPNODE,@INVDOCDETAILSID=INVDOCDETAILSID FROM @TABLEAVESADJUSTMENT  WHERE ID=@ICOUNT
				
				
	--		SELECT @REJOINDATE=CONVERT(DATETIME,DATEADD(DAY,1,@dcAlpha3))
	
	--		--CALCULATING VACATION DAYS-- DocID(-100) TO READ ONLY VACATION DAYS INFORMATION
	--			INSERT INTO @TABVAC
	--			Exec spPAY_ExtGetVacationDays @dcAlpha2,@dcAlpha3,@EMPNODE,-100,@OPVACATIONDAYS
	--			SELECT @VACATIONDAYS=VACATIONDAYS,@APPLIEDDAYS=APPLIEDDAYS,@APPROVEDDAYS=APPROVEDDAYS,@PAIDDAYS=PAIDDAYS,@CREDITEDDAYS=CREDITEDDAYS,@EXCESSDAYS=EXCESSDAYS,@REMAININGDAYS=REMAININGDAYS,@VACDAYSMESSAGE=VACDAYSMESSAGE FROM @TABVAC
						
	--			SELECT @dcAlpha1=@REJOINDATE,@dcAlpha4=isnull(@VACATIONDAYS,0),@dcAlpha5=ISNULL(@OPVACATIONSALARY,0),@dcAlpha6=ISNULL(@OPVACATIONSALARY,0),@dcAlpha7=isnull(@CREDITEDDAYS,0),@dcAlpha8=isnull(@VACATIONDAYS,0),@dcAlpha9=isnull(@VACATIONDAYS,0),@dcAlpha10=isnull(@VACATIONDAYS,0),
	--				   @dcAlpha11=isnull(@EXCESSDAYS,0),@dcAlpha12=isnull(@REMAININGDAYS,0),
	--				   @dcAlpha13='No',@dcAlpha15='No',@dcAlpha16='No',@dcAlpha17='No',@dcCCNID51=@EMPNODE,@INVDOCDETAILSID=INVDOCDETAILSID FROM @TABLEAVESADJUSTMENT  WHERE ID=@ICOUNT
				
	--		--
	--		set @strQuery=''
	--		set @strQuery='<Row>'
	--		set @strQuery=@strQuery+'<AccountsXML></AccountsXML>'
	--		set @strQuery=@strQuery+'<Transactions DocSeqNo="1"  DocDetailsID="0" LinkedInvDocDetailsID="0" LinkedFieldName="" LineNarration="" '
	--		set	@strQuery=@strQuery+' ProductID="'+ CONVERT(VARCHAR,@PayrollProduct) +'" '
	--		set @strQuery=@strQuery+' IsScheme="" Quantity="1" Unit="1" UOMConversion="1" UOMConvertedQty="1" Rate="0" Gross="" RefNO=""  IsQtyIgnored="1" AverageRate="0" StockValue="0" StockValueFC="0" CurrencyID="1" ExchangeRate="1.0" '
	--		set @strQuery=@strQuery+' DebitAccount="'+ CONVERT(VARCHAR,@DbAcc) +'" '
	--		set @strQuery=@strQuery+' CreditAccount="'+ CONVERT(VARCHAR,@CrACC) +'" '
	--		set @strQuery=@strQuery+' ></Transactions>'
			
	--		set @strQuery=@strQuery+'<Numeric Query="" ></Numeric>'
	--		set @strQuery=@strQuery+'<Alpha Query="dcAlpha2=N'''+ CONVERT(VARCHAR,@dcAlpha2)  +''','
	--		set @strQuery=@strQuery+' dcAlpha3=N'''+ CONVERT(VARCHAR,@dcAlpha3)  +''','
	--		set @strQuery=@strQuery+' dcAlpha1=N'''+ CONVERT(VARCHAR,@dcAlpha1)  +''','
	--		set @strQuery=@strQuery+' dcAlpha4=N'''+ CONVERT(VARCHAR,@dcAlpha4) +''','
	--		set @strQuery=@strQuery+' dcAlpha5=N'''+ CONVERT(VARCHAR,@dcAlpha5) +''','
	--		set @strQuery=@strQuery+' dcAlpha6=N'''+ CONVERT(VARCHAR,@dcAlpha6)  +''','
	--		set @strQuery=@strQuery+' dcAlpha7=N'''+ CONVERT(VARCHAR,@dcAlpha7)  +''','
	--		set @strQuery=@strQuery+' dcAlpha8=N'''+ CONVERT(VARCHAR,@dcAlpha8) +''','
	--		set @strQuery=@strQuery+' dcAlpha9=N'''+ CONVERT(VARCHAR,@dcAlpha9)  +''','
	--		set @strQuery=@strQuery+' dcAlpha10=N'''+ CONVERT(VARCHAR,@dcAlpha10)  +''','
	--		set @strQuery=@strQuery+' dcAlpha11=N'''+ CONVERT(VARCHAR,@dcAlpha11)  +''','
	--		set @strQuery=@strQuery+' dcAlpha12=N'''+ CONVERT(VARCHAR,@dcAlpha12)  +''','
	--		set @strQuery=@strQuery+' dcAlpha13=N'''+ CONVERT(VARCHAR,@dcAlpha13)  +''','
	--		set @strQuery=@strQuery+' dcAlpha15=N'''+ CONVERT(VARCHAR,@dcAlpha15)  +''','
	--		set @strQuery=@strQuery+' dcAlpha16=N'''+ CONVERT(VARCHAR,@dcAlpha16)  +''','
	--		set @strQuery=@strQuery+' dcAlpha17=N'''+ CONVERT(VARCHAR,@dcAlpha17)  +''','
	--		set @strQuery=@strQuery+' dcAlpha22=N'''+ CONVERT(VARCHAR,@dcAlpha22)  +''', "></Alpha>'
	--		set @strQuery=@strQuery+'<CostCenters Query="dcCCNID51='+ CONVERT(VARCHAR,@dcCCNID51) +'," ></CostCenters>'									
						
	--		set @strQuery=@strQuery+'<EXTRAXML></EXTRAXML></Row>'									
	--		PRINT (@strQuery)

	--		set @strResult=''
	--		EXEC @strResult=spDOC_SetTempInvDoc 40072,0,'','',@DOCDATE,'','',@strQuery ,'','','','','false',0,0,0,1,'',0,0,'admin','admin',1,1,False
	--		if(ISNULL(@strResult,'')<>'')
	--		begin
	--			SELECT @INVDOCDETAILSIDNEW=INVDOCDETAILSID FROM INV_DOCDETAILS WHERE DOCID=CONVERT(INT,@strResult)
	--			--UPDATE INV_DOCDETAILS SET LinkedInvDocDetailsID=@INVDOCDETAILSIDNEW WHERE INVDOCDETAILSID=@INVDOCDETAILSID
	--			UPDATE INV_DOCDETAILS SET STATUSID=369,REFCCID=300,REFNODEID=@INVDOCDETAILSID,LINKSTATUSID=369 WHERE DOCID=CONVERT(INT,@strResult)
	--		end
			
	--	SET @ICOUNT=@ICOUNT+1	
	--	END--WHILE END
	--END--REMARKS END
	--ELSE
	--BEGIN
	--	SET @strResult='Cannot post the document as selected dates already applied as vacation'
	--	UPDATE INV_DOCDETAILS SET STATUSID=448 WHERE DOCID=@DocID AND STATUSID<>369
	--	SELECT @strResult AS ExternalFuncErrorMessage
	--END
END

SET NOCOUNT OFF;	
END
GO
