USE PACT2C276
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spPAY_GetEmpPayrollInfo]
	@EmpID [int],
	@LeaveCompID [int],
	@PayrollDate [datetime],
	@Flag [int] = 0,
	@StartMonth [int] = 1,
	@UserID [int],
	@LangID [int] = 1
WITH ENCRYPTION, EXECUTE AS CALLER
AS
BEGIN TRY    
SET NOCOUNT ON;  
DECLARE @STARTDATE DATETIME,@VALID INT,@ALStartMonthYear DATETIME,@ALEndMonthYear DATETIME,@DOJ DATETIME,@NoOfMonths INT,@Grade int,@tID INT,@Cnt INT
SET @Cnt=0
SET @VALID=0
SET @NoOfMonths=0
IF (ISNULL(@Flag,0)=0)
BEGIN
	SELECT @STARTDATE=DATEADD(MONTH,DATEDIFF(MONTH,0,CONVERT(DATETIME,@PayrollDate)),0)
	--0-- EMPLOYEE INFORMATION
	 SELECT a.NodeID as EmpSeqNo,a.*,CONVERT(DATETIME,a.DOJ) CDOJ,CONVERT(DATETIME,a.DOB) CDOB,CONVERT(DATETIME,a.DOConfirmation) CDOC,CONVERT(DATETIME,a.DORelieve) CDORelieve,ISNULL(ET.Name,'') as sEmpType,ISNULL(N.Name,'') as sNationality,ISNULL(R.Name,'') as sReligion
	 FROM   COM_CC50051 a WITH(NOLOCK) LEFT JOIN COM_Lookup ET WITH(NOLOCK) on ET.NodeID=a.EmpType
		    LEFT JOIN COM_Lookup N WITH(NOLOCK) on N.NodeID=a.Nationality	LEFT JOIN COM_Lookup R WITH(NOLOCK) on R.NodeID=a.Religion
	 WHERE  a.NodeID IN(@EmpID)

	--1-- PAYROLL STRUCTURE INFORMATION
	--FOR Grade
		DECLARE @IsGradeWiseMP BIT
	SELECT @IsGradeWiseMP=CONVERT(BIT,Value) FROM ADM_GlobalPreferences WITH(NOLOCK) WHERE Name='GradeWiseMonthlyPayroll'
IF @IsGradeWiseMP=1
	BEGIN	
		SELECT @DOJ=CONVERT(DATETIME,DOJ) FROM COM_CC50051 WITH(NOLOCK) WHERE NodeID=@EmpID
		IF((SELECT COUNT(*) FROM ADM_CostCenterDef WITH(NOLOCK) WHERE CostCenterID=50051 and SysColumnName ='CCNID53' and IsColumnInUse=1 and UserProbableValues='H')>0)
		BEGIN
			SELECT @Grade=ISNULL(HistoryNodeID,0) FROM COM_HistoryDetails WITH(NOLOCK) WHERE NodeID=@EmpID AND CostCenterID=50051 AND HistoryCCID=50053 AND (CONVERT(DATETIME,FromDate)<=CONVERT(DATETIME,@PayrollDate)) AND (CONVERT(DATETIME,ToDate)>=CONVERT(DATETIME,@PayrollDate) OR ToDate IS NULL)
			IF(CONVERT(DATETIME,@DOJ)>CONVERT(DATETIME,@PayrollDate) AND ISNULL(@Grade,0)=0)
				SELECT @Grade=ISNULL(HistoryNodeID,0) FROM COM_HistoryDetails WITH(NOLOCK) WHERE NodeID=@EmpID AND CostCenterID=50051 AND HistoryCCID=50053 AND (CONVERT(DATETIME,FromDate)<=CONVERT(DATETIME,@DOJ)) AND (CONVERT(DATETIME,ToDate)>=CONVERT(DATETIME,@DOJ) OR ToDate IS NULL)
		END
		ELSE
			SELECT @Grade=ISNULL(CCNID53,0) FROM COM_CCCCDATA WITH(NOLOCK) WHERE COSTCENTERID=50051 AND NODEID=@EmpID
		
		print @Grade
		print @DOJ

		SELECT b.Name as ComponentName,a.*,CONVERT(DATETIME,a.PayrollDate) as PayrollMonth 
		FROM   COM_CC50054 a WITH(NOLOCK) Left Join COM_CC50052 b  WITH(NOLOCK) on b.NodeID=a.ComponentID
		WHERE  GradeID=@Grade AND CONVERT(DATETIME,PAYROLLDATE)=(SELECT MAX(PAYROLLDATE) FROM COM_CC50054  WITH(NOLOCK) WHERE CONVERT(DATETIME,PAYROLLDATE)<=CONVERT(DATETIME,@STARTDATE) AND GradeID=@Grade) ORDER BY Type,SNo
	END
ELSE
	BEGIN
	SELECT b.Name as ComponentName,a.*,CONVERT(DATETIME,a.PayrollDate) as PayrollMonth 
		FROM   COM_CC50054 a WITH(NOLOCK) Left Join COM_CC50052 b  WITH(NOLOCK) on b.NodeID=a.ComponentID
		WHERE  GradeID=1 AND CONVERT(DATETIME,PAYROLLDATE)=(SELECT MAX(PAYROLLDATE) FROM COM_CC50054  WITH(NOLOCK) WHERE CONVERT(DATETIME,PAYROLLDATE)<=CONVERT(DATETIME,@STARTDATE) AND GradeID=1) ORDER BY Type,SNo
	END
	--2-- LAST APPRAISAL INFORMATION
	SELECT TOP 1 *,CONVERT(DATETIME,EffectFrom) AS CEffectFrom,CONVERT(DATETIME,ApplyFrom) AS CApplyFrom
	FROM PAY_EmpPay WITH(NOLOCK) WHERE EmployeeID=@EmpID AND CONVERT(DATETIME,EffectFrom)<=@PayrollDate
	ORDER BY EffectFrom DESC,SeqNo DESC
END
ELSE IF (ISNULL(@Flag,0)=1)--POST PAST SALARY DETAILS
BEGIN
	----FOR START DATE AND END DATE OF LEAVEYEAR
	--SET ACCOUNTING DATES
	Declare @Year INT,@AccStartDate DATETIME,@AccEndDate DATETIME
	SELECT @Year=YEAR(CONVERT(DATETIME,@PayrollDate))
	--SET FIRST DATE TO GIVEN MONTH FROM PARAMETER
	SET @AccStartDate= CONVERT(VARCHAR,@Year)+'-' + DATENAME(MONTH,DATEADD(MONTH,@StartMonth,-1))+'-' +'01'
	SET @AccStartDate=CONVERT(DATETIME,@AccStartDate)

	--SET LAST DATE TO ENDMONTH FOR THE NEXT YEAR (1YEAR)
	SET @AccEndDate=DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,DATEADD(M,11,@AccStartDate))+1,0))
	SET @AccEndDate=CONVERT(DATETIME,@AccEndDate)

	PRINT 'ACC'
	PRINT @AccStartDate
	PRINT @AccEndDate	
	EXEC [spPAY_EXTGetLeaveyearDates] @AccStartDate,@ALStartMonthYear OUTPUT,@ALEndMonthYear OUTPUT
	IF((SELECT COUNT(*) FROM COM_CC50051  WITH(NOLOCK) WHERE NodeID=@EmpID AND CONVERT(DATETIME,DOJ) BETWEEN CONVERT(DATETIME,@ALStartMonthYear) and CONVERT(DATETIME,@ALEndMonthYear))>0)
	BEGIN
		SET @VALID=1
		SELECT @DOJ=CONVERT(DATETIME,DOJ) FROM COM_CC50051 WITH(NOLOCK) WHERE NodeID=@EmpID
		SET @NoOfMonths=DATEDIFF(m,CONVERT(DATETIME,@AccStartDate),CONVERT(DATETIME,@DOJ))+1
	END
	SELECT @VALID AS VALIDEMP,@NoOfMonths as NoOfMonths
END
ELSE IF (ISNULL(@Flag,0)=2)--JOIN FROM VACATION
BEGIN
	SELECT TOP 1 @tID= CONVERT(INT,dcAlpha1)
	FROM INV_DocDetails a WITH(NOLOCK) 
	JOIN COM_DocTextData d WITH(NOLOCK) ON d.InvDocDetailsID=a.InvDocDetailsID
	WHERE a.CostCenterID=40061 and a.StatusID=369
	AND ISNUMERIC(dcAlpha1)=1

	IF(@tID=@LeaveCompID)
	BEGIN
		set @Cnt=0
			
	SELECT @Cnt=COUNT(*) FROM INV_DocDetails WHERE LinkedInvDocDetailsID IN(
					SELECT TOP 1  ID.INVDOCDETAILSID FROM INV_DOCDETAILS ID WITH(NOLOCK)
					JOIN COM_DocCCData CC ON CC.InvDocDetailsID=ID.InvDocDetailsID
					JOIN COM_DocTextData TD ON TD.InvDocDetailsID=ID.InvDocDetailsID
					WHERE   CC.DCCCNID51=@EmpID AND ID.COSTCENTERID=40072 
					AND ID.STATUSID=369 AND isnull(TD.DCALPHA16,'')='No'
					AND ISNULL(TD.DCALPHA2,'')<>'' AND ISNULL(TD.DCALPHA3,'')<>'' AND ISNULL(TD.DCALPHA1,'')='' ) AND StatusID NOT IN(372,376)
	if(@Cnt=0)
		BEGIN
			SELECT TOP 1 CONVERT(DATETIME,TD.DCALPHA2) FROMDATE,CONVERT(DATETIME,TD.DCALPHA3) TODATE,ID.DOCID,ID.INVDOCDETAILSID INVDOCDETAILSID  FROM INV_DOCDETAILS ID WITH(NOLOCK), COM_DOCTEXTDATA TD WITH(NOLOCK),COM_DOCCCDATA CC  WITH(NOLOCK)
			WHERE  ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND ID.INVDOCDETAILSID=CC.INVDOCDETAILSID AND TD.INVDOCDETAILSID=CC.INVDOCDETAILSID AND CC.DCCCNID51=@EmpID AND ID.COSTCENTERID=40072 
			AND ID.STATUSID=369 AND isnull(TD.DCALPHA16,'')='No' AND ISNULL(TD.DCALPHA2,'')<>'' AND ISNULL(TD.DCALPHA3,'')<>'' AND ISNULL(TD.DCALPHA1,'')=''
		END
	END
	ELSE
	BEGIN
		set @Cnt=0
	SELECT @Cnt=count(*) FROM INV_DocDetails WHERE LinkedInvDocDetailsID IN(
					SELECT TOP 1  ID.INVDOCDETAILSID FROM INV_DOCDETAILS ID WITH(NOLOCK)
					JOIN COM_DocCCData CC ON CC.InvDocDetailsID=ID.InvDocDetailsID
					JOIN COM_DOCTEXTDATA TD WITH(NOLOCK) ON ID.InvDocDetailsID=TD.InvDocDetailsID
					WHERE   CC.DCCCNID51=@EmpID AND ID.DocumentType=62 AND CC.dcCCNID52=@LeaveCompID
					AND ID.STATUSID=369 AND ISNULL(TD.DCALPHA15,'')='') AND StatusID NOT IN(372,376) 
		if(@Cnt=0)
		BEGIN
			SELECT TOP 1 CONVERT(DATETIME,TD.DCALPHA4) FROMDATE,CONVERT(DATETIME,TD.DCALPHA5) TODATE,ID.DOCID,ID.INVDOCDETAILSID INVDOCDETAILSID  
			FROM INV_DOCDETAILS ID WITH(NOLOCK)
			JOIN COM_DOCTEXTDATA TD WITH(NOLOCK) ON ID.InvDocDetailsID=TD.InvDocDetailsID
			JOIN COM_DOCCCDATA CC WITH(NOLOCK) ON ID.InvDocDetailsID=CC.InvDocDetailsID
			WHERE ID.DocumentType=62 AND ID.STATUSID=369 AND CC.dcCCNID52=@LeaveCompID
			AND ISDATE(TD.DCALPHA4)=1 AND ISDATE(TD.DCALPHA5)=1 
			AND CC.DCCCNID51=@EmpID AND ISNULL(TD.DCALPHA15,'')=''
		END
	END

END
ELSE IF (ISNULL(@Flag,0)=3)--DATE OF JOINING VALIDATION
BEGIN
	SELECT @DOJ=CONVERT(DATETIME,DOJ) FROM COM_CC50051 WITH(NOLOCK) WHERE NodeID=@EmpID
	IF(CONVERT(DATETIME,@PayrollDate)<CONVERT(DATETIME,@DOJ))
		SELECT 'Please check the date, selected date should be greater than date of joining of the employee'
END
ELSE IF (ISNULL(@Flag,0)=4)--DAILY ATTENDANCE: GET PREVIOUS DATE RECORD FOR GIVEN DATE
BEGIN
	SELECT TOP 1 ISNULL(ID.DOCID,0) FROM INV_DOCDETAILS ID WITH(NOLOCK), COM_DOCTEXTDATA TD WITH(NOLOCK)
	WHERE  ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND ID.COSTCENTERID=40067 AND ID.STATUSID=369 AND ISDATE(TD.DCALPHA1)=1 AND CONVERT(DATETIME,TD.DCALPHA1)=CONVERT(DATETIME,@PayrollDate)
END
--------------------------------------------------------------------------------
SET NOCOUNT OFF;  
RETURN 1  
END TRY  
BEGIN CATCH    
  --Return exception info [Message,Number,ProcedureName,LineNumber]    
  IF ERROR_NUMBER()=50000  
  BEGIN  
   SELECT ErrorMessage,ErrorNumber FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=ERROR_MESSAGE() AND LanguageID=@LangID  
  END  
  ELSE  
  BEGIN  
   SELECT ErrorMessage, ERROR_MESSAGE() AS ServerMessage,ERROR_NUMBER() as ErrorNumber, ERROR_PROCEDURE()as ProcedureName, ERROR_LINE() AS ErrorLine  
   FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=-999 AND LanguageID=@LangID  
  END   
SET NOCOUNT OFF    
RETURN -999     
END CATCH
GO
