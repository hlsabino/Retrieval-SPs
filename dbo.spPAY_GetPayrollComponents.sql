USE PACT2C276
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spPAY_GetPayrollComponents]
	@Flag [int] = 0,
	@Grade [int] = 1,
	@EmpNode [int] = 0,
	@PayDate [datetime],
	@Userid [int] = 1,
	@Langid [int] = 1
WITH ENCRYPTION, EXECUTE AS CALLER
AS
BEGIN TRY    
SET NOCOUNT ON;
DECLARE @CCID INT,@TABLENAME VARCHAR(100),@STRQUERY NVARCHAR(MAX),@PayrollDate DATETIME
DECLARE @TABCP TABLE(ID INT IDENTITY(1,1),NAME VARCHAR(100),NODEID INT,PARENTID INT,PERCENTAGE DECIMAL(9,2))

--SET TO FIRST DAY FOR THE GIVEN DATE
SET @PayrollDate=DATEADD(MONTH,DATEDIFF(MONTH,0,CONVERT(DATETIME,@PayDate)),0)
IF ISNULL(@EmpNode,0)>0
BEGIN
	IF((SELECT COUNT(*) FROM ADM_CostCenterDef WITH(NOLOCK) WHERE CostCenterID=50051 and SysColumnName ='CCNID53' and IsColumnInUse=1 and UserProbableValues='H')>0)
		SELECT @Grade=ISNULL(HistoryNodeID,0) FROM COM_HistoryDetails WITH(NOLOCK) WHERE NodeID=@EmpNode AND CostCenterID=50051 AND HistoryCCID=50053 AND (CONVERT(DATETIME,FromDate)<=CONVERT(DATETIME,@PayrollDate)) AND (CONVERT(DATETIME,ToDate)>=CONVERT(DATETIME,@PayrollDate) OR ToDate IS NULL)
	ELSE
		SELECT @Grade=ISNULL(CCNID53,0) FROM COM_CCCCDATA WITH(NOLOCK) WHERE COSTCENTERID=50051 AND NODEID=@EmpNode
END

declare @gw bit
select @gw=value from ADM_GlobalPreferences WITH(NOLOCK) where Name ='GradeWiseMonthlyPayroll'
if(@gw=0)
	set @Grade=1

IF (ISNULL(@Flag,0)=0)--Recording of Data
BEGIN
	SELECT NODEID,case when @Langid=1 then NAME else AliasName end NAME FROM COM_CC50052 WITH(NOLOCK) WHERE NODEID IN (2,3) AND ISGROUP=1
	SELECT case when @Langid=1 then NAME else AliasName end NAME ,CONVERT(NVARCHAR,C52.NODEID) NODEID ,C52.PARENTID FROM COM_CC50052 C52 WITH(NOLOCK),COM_CC50054 C54 WITH(NOLOCK) 
	WHERE  C52.NODEID=C54.COMPONENTID AND FieldType='Monthly' AND C52.PARENTID IN (2,3) AND C54.GRADEID=@Grade
		   AND C54.PAYROLLDATE=(SELECT MAX(PAYROLLDATE) FROM COM_CC50054  WITH(NOLOCK) WHERE CONVERT(DATETIME,PAYROLLDATE)<=CONVERT(DATETIME,@PayrollDate) AND GRADEID=@Grade) ORDER BY PARENTID
END

ELSE IF (ISNULL(@Flag,0)=1)--Checklist
BEGIN
	SET @STRQUERY=''
	SELECT @CCID=ISNULL(VALUE,0) FROM  ADM_GLOBALPREFERENCES WITH(NOLOCK) WHERE NAME='EMPCHECKLISTDIMENSION'
	SELECT @TABLENAME=TableName From ADM_Features WITH(NOLOCK) WHERE FeatureID=@CCID
	--SET @TABLENAME='COM_CC'+ CONVERT(VARCHAR,@CCID)
	SET @STRQUERY='DECLARE  @TAB TABLE(ID INT IDENTITY(1,1),NODEID INT,NAME nvarchar(1000),PARENTID INT,HEADER INT)'
	SET @STRQUERY=@STRQUERY + ' INSERT INTO @TAB SELECT NODEID,NAME,0,1 FROM '+ CONVERT(VARCHAR,@TABLENAME) +'  WITH(NOLOCK) WHERE PARENTID=2 AND ISGROUP=1'
	SET @STRQUERY=@STRQUERY + ' INSERT INTO @TAB 
								SELECT NODEID,NAME ,PARENTID,0 FROM '+ CONVERT(VARCHAR,@TABLENAME) +'  WITH(NOLOCK) 
								WHERE PARENTID IN (SELECT NODEID FROM '+ CONVERT(VARCHAR,@TABLENAME) +'  WITH(NOLOCK) WHERE PARENTID=2 AND ISGROUP=1)
								ORDER BY PARENTID'
	
	SET @STRQUERY=@STRQUERY + ' SELECT NODEID,NAME FROM @TAB WHERE HEADER=1'
	SET @STRQUERY=@STRQUERY + ' SELECT NAME ,CONVERT(NVARCHAR,NODEID) NODEID ,PARENTID FROM @TAB WHERE HEADER=0'
	--PRINT (@STRQUERY)
	EXEC sp_executesql @STRQUERY
END

ELSE IF (ISNULL(@Flag,0)=2)--Post Past Salary
BEGIN
	SELECT PC.NAME ,CONVERT(NVARCHAR,PC.NODEID) NODEID ,PC.PARENTID FROM COM_CC50052 PC WITH(NOLOCK),COM_CC50054 CP WITH(NOLOCK) WHERE 
		   CP.GRADEID=@Grade AND PC.NODEID=CP.COMPONENTID AND ADDTONET IN ('Net','Tax','NetAndTax') AND PC.PARENTID IN (2,3)
		   AND CP.PAYROLLDATE=(SELECT MAX(PAYROLLDATE) FROM COM_CC50054  WITH(NOLOCK) WHERE CONVERT(DATETIME,PAYROLLDATE)<=CONVERT(DATETIME,@PayrollDate) AND GRADEID=@Grade)	 
END

ELSE IF (ISNULL(@Flag,0)=3)--Apply Vacation
BEGIN
	SELECT NODEID,NAME,NODEID as PARENTID,0 FROM COM_CC50052 WITH(NOLOCK) WHERE NODEID IN (2,3,4) AND ISGROUP=1
	INSERT INTO @TABCP
		SELECT 'EMPLOYEE_BASIC' ,0,2 ,0
	INSERT INTO @TABCP
		SELECT NAME ,PC.NODEID ,PARENTID,0 FROM COM_CC50052 PC WITH(NOLOCK),COM_CC50054 CP WITH(NOLOCK) 
		WHERE  PC.NODEID=CP.COMPONENTID AND CP.GRADEID=@Grade and PC.PARENTID IN (2,3,4)  AND ISNULL(FIELDTYPE,'')<>'OverTime' AND NAME <> 'EMPLOYEE_BASIC' 
		AND CP.PAYROLLDATE=(SELECT MAX(PAYROLLDATE) FROM COM_CC50054  WITH(NOLOCK) WHERE CONVERT(DATETIME,PAYROLLDATE)<=CONVERT(DATETIME,@PayrollDate) AND GRADEID=@Grade) 
		ORDER BY PARENTID,Type,SNo

	SELECT * FROM @TABCP
END

ELSE IF (ISNULL(@Flag,0)=4)--Vacation Management
BEGIN
	INSERT INTO @TABCP
		SELECT 'EMPLOYEE_BASIC' ,0,2 ,0
	INSERT INTO @TABCP
		SELECT C52.NAME ,C52.NODEID,C52.PARENTID,CASE ISNUMERIC(C54.FORMULA) WHEN 1 THEN C54.FORMULA ELSE 0 END FROM COM_CC50052 C52 WITH(NOLOCK),COM_CC50054 C54 WITH(NOLOCK) WHERE 
		       C52.NODEID=C54.COMPONENTID AND C54.GRADEID=@Grade AND C52.PARENTID=2 AND C54.FIELDTYPE<>'OverTime'
			   AND PayrollDate=(SELECT MAX(PAYROLLDATE) FROM COM_CC50054  WITH(NOLOCK) WHERE CONVERT(DATETIME,PAYROLLDATE)<=CONVERT(DATETIME,@PayrollDate) AND GRADEID=@Grade) ORDER BY C54.SNO
			   
	SELECT * FROM @TABCP
END

ELSE IF (ISNULL(@Flag,0)=5)--Form12BA
BEGIN
	INSERT INTO @TABCP
		SELECT LK.NAME,LK.NODEID,0,0 FROM COM_LOOKUP LK WITH(NOLOCK),COM_LOOKUPTYPES LKT WITH(NOLOCK) WHERE LK.LOOKUPTYPE=LKT.NODEID AND LKT.LOOKUPNAME='Payroll_Perquisites'
	
	SELECT * FROM @TABCP
END
ELSE IF (ISNULL(@Flag,0)=6)--Gratuity Setting (Fill Experience no combo)
BEGIN
	DECLARE @TABEXP TABLE(ID INT IDENTITY(1,1),NAME VARCHAR(5),NODEID VARCHAR(5))
	DECLARE @I AS INT
	SET @I=0
	WHILE(@I<=70)
	BEGIN
		INSERT INTO @TABEXP VALUES(@I,@I)
		INSERT INTO @TABEXP VALUES(CONVERT(VARCHAR,@I)+CONVERT(VARCHAR,'+'),CONVERT(VARCHAR,@I)+CONVERT(VARCHAR,'+'))
	SET @I=@I+1
	END
	SELECT * FROM @TABEXP
END
ELSE IF (ISNULL(@Flag,0)=7)--DUES ENTRY
BEGIN
	SELECT NODEID,NAME FROM COM_CC50052 WITH(NOLOCK) WHERE NODEID IN (2,3) AND ISGROUP=1
	SELECT NAME ,CONVERT(NVARCHAR,C52.NODEID) NODEID ,C52.PARENTID FROM COM_CC50052 C52 WITH(NOLOCK),COM_CC50054 C54 WITH(NOLOCK) 
	WHERE  C52.NODEID=C54.COMPONENTID AND ShowInDuesEntry='Yes' AND C52.PARENTID IN (2,3) AND C54.GRADEID=@Grade AND C54.PAYROLLDATE=(SELECT MAX(PAYROLLDATE) FROM COM_CC50054  WITH(NOLOCK) WHERE CONVERT(DATETIME,PAYROLLDATE)<=CONVERT(DATETIME,@PayrollDate) AND GRADEID=@Grade) ORDER BY PARENTID
END

SET NOCOUNT OFF;  
RETURN 1  
END TRY  
BEGIN CATCH    
  IF ERROR_NUMBER()=50000  
  BEGIN  
   SELECT ErrorMessage,ErrorNumber FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=ERROR_MESSAGE() AND LanguageID=@LangID  
  END  
  ELSE  
  BEGIN  
   SELECT ErrorMessage, ERROR_MESSAGE() AS ServerMessage,ERROR_NUMBER() as ErrorNumber, ERROR_PROCEDURE()as ProcedureName, ERROR_LINE() AS ErrorLine  
   FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=-999 AND LanguageID=@LangID  
  END   
SET NOCOUNT OFF    
RETURN -999     
END CATCH
GO
