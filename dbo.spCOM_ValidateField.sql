USE PACT2C276
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spCOM_ValidateField]
	@CCColID [int],
	@DataType [nvarchar](50),
	@RENAME [nvarchar](100),
	@Mandatory [int],
	@CostCenterID [int],
	@IsInventory [int],
	@Flag [int],
	@LangID [int]
WITH ENCRYPTION, EXECUTE AS CALLER
AS
BEGIN TRY    
SET NOCOUNT ON;

--------------------------------------------------------------------------------
DECLARE @STRQRY NVARCHAR(MAX),@TRTABLENAME NVARCHAR(100),@COLTABLENAME NVARCHAR(100),@JOINCOLUMNNAME NVARCHAR(100)
DECLARE @EXSTDATATYPE NVARCHAR(50),@USERCOLUMNNAME NVARCHAR(100),@FORMULAMSG NVARCHAR(MAX),@SysColumnName nvarchar(100)
SET @STRQRY=''
SET @TRTABLENAME=''
SET @COLTABLENAME=''
SET @JOINCOLUMNNAME=''
SET @FORMULAMSG=''
SET @USERCOLUMNNAME=''
IF(@IsInventory=1)
BEGIN
	SET @TRTABLENAME='INV_DOCDETAILS'
	SET @JOINCOLUMNNAME='INVDOCDETAILSID'
END
ELSE
BEGIN
	SET @TRTABLENAME='ACC_DOCDETAILS'
	SET @JOINCOLUMNNAME='ACCDOCDETAILSID'
END
	
SELECT @SysColumnName=SysColumnName,@USERCOLUMNNAME=USERCOLUMNNAME FROM ADM_COSTCENTERDEF WITH(NOLOCK) WHERE COSTCENTERID=@CostCenterID AND COSTCENTERCOLID=@CCColID	
IF(@SysColumnName LIKE 'DCALPHA%')
	SET @COLTABLENAME='COM_DOCTEXTDATA'
ELSE IF(@SysColumnName LIKE 'DCNUM%')
	SET @COLTABLENAME='COM_DOCNUMDATA'
ELSE IF(@SysColumnName LIKE 'DCCCNID%')
	SET @COLTABLENAME='COM_DOCCCDATA'
IF(ISNULL(@TRTABLENAME,'')<>'' AND ISNULL(@COLTABLENAME,'')<>'' AND ISNULL(@COLTABLENAME,'')<>'')
BEGIN		
	IF(@Flag=0)
	BEGIN
		--PRINT 'DELETE COLUMN'
		SET @STRQRY='IF((SELECT COUNT(*) FROM '+ @TRTABLENAME +' ID WITH(NOLOCK) ,'+ @COLTABLENAME +' T1 WITH(NOLOCK) 
					 WHERE ID.'+ @JOINCOLUMNNAME +'=T1.'+ @JOINCOLUMNNAME +' AND ID.COSTCENTERID='+ CONVERT(VARCHAR,@CostCenterID) +' AND ISNULL('+ @SysColumnName +','''')<>'''')>0)'
		SET @STRQRY=@STRQRY +' SELECT ''Data exists for the selected column -'+ CONVERT(NVARCHAR,@USERCOLUMNNAME)+''' AS Msg'
		--PRINT (@STRQRY)
		EXEC (@STRqRY)
	END
	ELSE IF(@Flag=1)
	BEGIN
		--PRINT 'DATATYPE CHANGE'
		SELECT @EXSTDATATYPE=UserColumnType FROM ADM_COSTCENTERDEF WITH(NOLOCK) WHERE COSTCENTERID=@CostCenterID AND SYSCOLUMNNAME=@SysColumnName
		PRINT @EXSTDATATYPE
		IF(@EXSTDATATYPE<>@DataType AND @SysColumnName LIKE 'DCALPHA%')
		BEGIN
			IF((@EXSTDATATYPE='TEXT' AND @DataType='Combobox') OR 
			   (@EXSTDATATYPE='Combobox' AND @DataType='TEXT') OR																								
			   (@EXSTDATATYPE='TEXT' AND @DataType='EditableCombobox') OR
			   (@EXSTDATATYPE='EditableCombobox' AND @DataType='TEXT') OR
			   (@EXSTDATATYPE='Combobox' AND @DataType='EditableCombobox') OR 
			   (@EXSTDATATYPE='EditableCombobox' AND @DataType='Combobox'))
			BEGIN
				SET @STRQRY='IF((SELECT COUNT(*) FROM '+ @TRTABLENAME +' ID WITH(NOLOCK) ,'+ @COLTABLENAME +' T1 WITH(NOLOCK) 
				                 WHERE ID.'+ @JOINCOLUMNNAME +'=T1.'+ @JOINCOLUMNNAME +' AND ID.COSTCENTERID='+ CONVERT(VARCHAR,@CostCenterID) +' AND ISNULL('+ @SysColumnName +','''')<>''''
				                 AND ISNUMERIC('+ @SysColumnName +')=0)>0)'
				SET @STRQRY=@STRQRY +' SELECT ''Data exists, cannot change the datatype -'+ CONVERT(NVARCHAR,@EXSTDATATYPE)+''' AS Msg'
				--PRINT (@STRQRY)
				EXEC (@STRQRY)
			END 
			ELSE IF(((@EXSTDATATYPE='TEXT' OR @EXSTDATATYPE='Combobox' OR @EXSTDATATYPE='EditableCombobox') AND (@DataType='INT' OR @DataType='FLOAT'  OR @DataType='NUMERIC' )))
			BEGIN
				SET @STRQRY='IF((SELECT COUNT(*) FROM '+ @TRTABLENAME +' ID WITH(NOLOCK) ,'+ @COLTABLENAME +' T1 WITH(NOLOCK) 
							     WHERE ID.'+ @JOINCOLUMNNAME +'=T1.'+ @JOINCOLUMNNAME +' AND ID.COSTCENTERID='+ CONVERT(VARCHAR,@CostCenterID) +' AND ISNULL('+ @SysColumnName +','''')<>''''
				                 AND ISNUMERIC('+ @SysColumnName +')=0)>0)'
				SET @STRQRY=@STRQRY +' SELECT ''Data exists, cannot change the datatype -'+ CONVERT(NVARCHAR,@EXSTDATATYPE)+''' AS Msg'
				--PRINT (@STRQRY)
				EXEC (@STRQRY)
			END 
			ELSE IF(((@EXSTDATATYPE='INT' OR @EXSTDATATYPE='FLOAT'  OR @EXSTDATATYPE='NUMERIC' ) AND (@DataType='TEXT' OR @DataType='Combobox' OR @DataType='EditableCombobox' )))
			BEGIN
				SET @STRQRY='IF((SELECT COUNT(*) FROM '+ @TRTABLENAME +' ID WITH(NOLOCK) ,'+ @COLTABLENAME +' T1 WITH(NOLOCK) 
				                 WHERE ID.'+ @JOINCOLUMNNAME +'=T1.'+ @JOINCOLUMNNAME +' AND ID.COSTCENTERID='+ CONVERT(VARCHAR,@CostCenterID) +' AND ISNULL('+ @SysColumnName +','''')<>''''
				                 AND ISNUMERIC('+ @SysColumnName +')=1)>0)'
				SET @STRQRY=@STRQRY +' SELECT ''Data exists, cannot change the datatype -'+ CONVERT(NVARCHAR,@EXSTDATATYPE)+''' AS Msg'
				--PRINT (@STRQRY)
				EXEC (@STRQRY)
			END 
			ELSE IF(((@EXSTDATATYPE='INT' OR @EXSTDATATYPE='FLOAT'  OR @EXSTDATATYPE='NUMERIC' OR @EXSTDATATYPE='TEXT' OR @EXSTDATATYPE='Combobox' OR @EXSTDATATYPE='EditableCombobox' ) AND (@DataType='DATE')))
			BEGIN
				SET @STRQRY='IF((SELECT COUNT(*) FROM '+ @TRTABLENAME +' ID WITH(NOLOCK) ,'+ @COLTABLENAME +' T1 WITH(NOLOCK) 
				                 WHERE ID.'+ @JOINCOLUMNNAME +'=T1.'+ @JOINCOLUMNNAME +' AND ID.COSTCENTERID='+ CONVERT(VARCHAR,@CostCenterID) +' AND ISNULL('+ @SysColumnName +','''')<>''''
				                 AND (ISNUMERIC('+ @SysColumnName +')=1 OR ISNUMERIC('+ @SysColumnName +')=0))>0)'
				SET @STRQRY=@STRQRY +' SELECT ''Data exists, cannot change the datatype -'+ CONVERT(NVARCHAR,@EXSTDATATYPE)+''' AS Msg'
				--PRINT (@STRQRY)
				EXEC (@STRQRY)
			END 
		END
	END
	ELSE IF(@FLAG=2)
	BEGIN
		--PRINT 'RENAME COLUMN'
		SELECT @USERCOLUMNNAME=USERCOLUMNNAME FROM ADM_COSTCENTERDEF WITH(NOLOCK) WHERE COSTCENTERID=@CostCenterID AND SYSCOLUMNNAME=@SysColumnName
		IF(@RENAME<>@USERCOLUMNNAME)
		BEGIN
			SET @USERCOLUMNNAME=REPLACE(@USERCOLUMNNAME,' ','')
			IF((SELECT COUNT(*) FROM ADM_DocumentDef WITH(NOLOCK) WHERE COSTCENTERID=@CostCenterID AND  FORMULA LIKE '%'+ @USERCOLUMNNAME+'%')>0)
				SET @FORMULAMSG=@FORMULAMSG+ 'Formula exists in document definition - '+ CONVERT(NVARCHAR,@USERCOLUMNNAME) + char(13) 
			IF((SELECT COUNT(*) FROM COM_WorkFlowDef WITH(NOLOCK) WHERE COSTCENTERID=@CostCenterID AND  EXPRESSION LIKE '%'+ @USERCOLUMNNAME+'%')>0)
				SET @FORMULAMSG=@FORMULAMSG+ 'Formula exists in workflow definition - '+ CONVERT(NVARCHAR,@USERCOLUMNNAME)		
				
			SELECT @FORMULAMSG		
		END
	END
	ELSE IF(@FLAG=3 AND @Mandatory=1)
	BEGIN
		 SET @STRQRY='IF((SELECT COUNT(*) FROM '+ @TRTABLENAME +' ID WITH(NOLOCK) ,'+ @COLTABLENAME +' T1 WITH(NOLOCK) 
		 WHERE ID.'+ @JOINCOLUMNNAME +'=T1.'+ @JOINCOLUMNNAME +' AND ID.COSTCENTERID='+ CONVERT(VARCHAR,@CostCenterID) +' AND ISNULL('+ @SysColumnName +','''')='''')>0)'
		 SET @STRQRY=@STRQRY +' SELECT ''Cannot set the column as mandatory, empty data exists -False'' AS Msg'
		 --PRINT (@STRQRY)
		 EXEC (@STRQRY)
	END
END
SET NOCOUNT OFF; 
IF(ISNULL(@STRQRY,'')='')
	SELECT  '' AS Msg
RETURN 1  
END TRY  
BEGIN CATCH    
  --Return exception info [Message,Number,ProcedureName,LineNumber]    
  IF ERROR_NUMBER()=50000  
  BEGIN  
   SELECT ErrorMessage,ErrorNumber FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=ERROR_MESSAGE() AND LanguageID=@LangID  
  END  
  ELSE  
  BEGIN  
   SELECT ErrorMessage, ERROR_MESSAGE() AS ServerMessage,ERROR_NUMBER() as ErrorNumber, ERROR_PROCEDURE()as ProcedureName, ERROR_LINE() AS ErrorLine  
   FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=-999 AND LanguageID=@LangID  
  END   
SET NOCOUNT OFF    
RETURN -999     
END CATCH
 
GO
