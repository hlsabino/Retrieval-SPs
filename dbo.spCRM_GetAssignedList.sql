USE PACT2C276
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spCRM_GetAssignedList]
	@CCID [int] = 0,
	@CCNODEID [int] = 0,
	@TYPE [int] = 0,
	@UserID [int] = 1,
	@LangID [int] = 1
WITH ENCRYPTION, EXECUTE AS CALLER
AS
BEGIN TRANSACTION
BEGIN TRY	
SET NOCOUNT ON
	
	IF @TYPE=1
	BEGIN
		DECLARE @TBL TABLE(ID INT IDENTITY(1,1) PRIMARY KEY,ASSIGNEDFROM NVARCHAR(300),ASSIGNEDTO NVARCHAR(300),[DATE] FLOAT)
		DECLARE @TBL1 TABLE(ID INT IDENTITY(1,1) PRIMARY KEY,TEAM INT,IsGroup INT,IsRole INT,TEAMNODEID INT,USERID INT,[DATE] FLOAT,CreatedBy nvarchar(300))
	 
		INSERT INTO @TBL1
		SELECT IsTeam,IsGroup,IsRole,TeamNodeID,USERID,MIN(CREATEDDATE) CREATEDDATE,CreatedBy 
		FROM CRM_AssignmentHistory WITH(NOLOCK) 
		WHERE CCID=@CCID AND CCNODEID=@CCNODEID AND (ISFROMACTIVITY=0 OR ISFROMACTIVITY IS NULL)
		GROUP BY IsTeam,IsGroup,IsRole,TeamNodeID,USERID,CreatedBy 
		ORDER BY CREATEDDATE DESC
		
		DECLARE @COUNT INT,@I INT,@ISTEAM INT,@ISROLE INT,@ISGROUP INT,@FROMUSER NVARCHAR(300)
		SELECT @I=1,@COUNT=COUNT(*) FROM @TBL1
		WHILE @I<=@COUNT
		BEGIN
			--IF @I=1
			--	SELECT TOP 1 @FROMUSER=CreatedBy FROM CRM_AssignmentHistory WHERE CCID=@CCID AND CCNODEID=@CCNODEID
			--	ORDER BY AssignmentID
			--ELSE 
			--	SELECT @FROMUSER=ISNULL(ASSIGNEDTO,@FROMUSER) from @TBL where ID=(@I-1)
				
			SELECT @FROMUSER=CreatedBy FROM @TBL1 WHERE ID=@I	
			
			SELECT @ISTEAM=TEAM,@ISROLE=IsRole,@ISGROUP=IsGroup FROM @TBL1 WHERE ID=@I
			
			IF @ISTEAM=0 AND @ISROLE=0 AND @ISGROUP=0
			BEGIN
				INSERT INTO @TBL	
				SELECT @FROMUSER,UserName,T.[DATE] FROM ADM_Users U WITH(NOLOCK) 
				JOIN @TBL1 T ON T.UserID =U.UserID
				WHERE T.ID=@I
			END
			ELSE IF @ISTEAM=1
			BEGIN
				INSERT INTO @TBL	
				SELECT @FROMUSER,TEAMNAME+ '-Team',T.[DATE] FROM CRM_TEAMS U WITH(NOLOCK) 
				JOIN @TBL1 T ON T.TEAMNODEID =U.TeamID
				WHERE T.ID=@I
			END
			ELSE IF @ISGROUP=1
			BEGIN
				INSERT INTO @TBL
				SELECT @FROMUSER,GROUPNAME+ '-Group',T.[DATE] FROM COM_Groups U WITH(NOLOCK)
				JOIN @TBL1 T ON T.TEAMNODEID =U.GID
				WHERE T.ID=@I AND U.GROUPNAME<>''
			END
			ELSE IF @ISROLE=1
			BEGIN
				INSERT INTO @TBL
				SELECT @FROMUSER,NAME+ '-Role',T.[DATE] FROM ADM_PROLES U WITH(NOLOCK)
				JOIN @TBL1 T ON T.TEAMNODEID =U.ROLEID
				WHERE T.ID=@I	
			END
			SET @I=@I+1
		END
		SELECT ASSIGNEDFROM,ASSIGNEDTO,CONVERT(NVARCHAR,CONVERT(DATETIME,[DATE]),102) [DATE],CONVERT(VARCHAR(8),CAST([DATE] AS DATETIME),108) [TIME] FROM @TBL
		
--		SELECT ASSIGNEDFROM,ASSIGNEDTO,CONVERT(NVARCHAR,CONVERT(DATETIME,[DATE]),102) [DATE] FROM @TBL
	END
	ELSE
	BEGIN
		SELECT DISTINCT TeamID,TeamName FROM CRM_Teams WITH(NOLOCK) WHERE StatusID=420
		
		SELECT C.UserID,A.UserName,C.TeamID FROM  CRM_Teams C WITH(NOLOCK)
		JOIN ADM_Users A WITH(NOLOCK) ON A.UserID=C.UserID
		WHERE IsGroup=0
		
		SELECT * FROM CRM_Assignment WITH(NOLOCK) 
		WHERE CCID=@CCID AND CCNODEID=@CCNODEID AND (ISFROMACTIVITY=0 OR ISFROMACTIVITY IS NULL)

		if(@CCID=86)
		BEGIN
			select Company from crm_leads WITH(NOLOCK) where leadid=@CCNODEID
		END
		ELSE IF (@CCID=89)
		BEGIN
			select Company from CRM_Opportunities WITH(NOLOCK) where OpportunityID =@CCNODEID
		END
		ELSE IF (@CCID=73)
		BEGIN
			SELECT CUSTOMERNAME AS Company FROM CRM_CASES  WITH(NOLOCK)
			LEFT JOIN CRM_Customer C WITH(NOLOCK) ON C.CustomerID = CRM_CASES.CustomerID
		END
		ELSE IF (@CCID=83)
		BEGIN
			SELECT CUSTOMERNAME AS Company FROM CRM_Customer WITH(NOLOCK) 
		END
		ELSE IF (@CCID=65)
		BEGIN
			SELECT FirstName AS Company FROM COM_CONTACTS WITH(NOLOCK)  
		END
		ELSE 
			SELECT 1 Company
		
		EXEC [spADM_GetUserNamebyOwner] @UserID
		
		IF (@CCID=73)
			SELECT @CCID CostCenterID,Name PrefName,Value FROM COM_CostCenterPreferences WITH(NOLOCK) WHERE CostCenterID=73 AND Name='AssignCase'
	END 
		
COMMIT TRANSACTION
SET NOCOUNT OFF;
RETURN 1
END TRY
BEGIN CATCH  
	--Return exception info [Message,Number,ProcedureName,LineNumber]  
	IF ERROR_NUMBER()=50000
	BEGIN
		SELECT ErrorMessage,ErrorNumber FROM COM_ErrorMessages WITH(nolock) WHERE ErrorNumber=ERROR_MESSAGE() AND LanguageID=@LangID
	END
	ELSE
	BEGIN
		SELECT ErrorMessage, ERROR_MESSAGE() AS ServerMessage,ERROR_NUMBER() as ErrorNumber, ERROR_PROCEDURE()as ProcedureName, ERROR_LINE() AS ErrorLine
		FROM COM_ErrorMessages WITH(nolock) WHERE ErrorNumber=-999 AND LanguageID=@LangID
	END
ROLLBACK TRANSACTION
SET NOCOUNT OFF  
RETURN -999   
END CATCH
GO
