USE PACT2C276
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spCOM_GetCCCCMapDetails]
	@PARENTFEATUREID [int],
	@PNodeID [int] = 0,
	@LangID [int] = 1
WITH ENCRYPTION, EXECUTE AS CALLER
AS
BEGIN TRANSACTION  
BEGIN TRY    
SET NOCOUNT ON;    
  --Declaration Section  
  DECLARE @HasAccess bit  
  
  --SP Required Parameters Check  
  IF @PARENTFEATUREID =0  
  BEGIN  
   RAISERROR('-100',16,1)  
  END  
   
          
  -- GET CCCCC MAP DATA  
  CREATE TABLE #TBLTEMP(ID INT IDENTITY(1,1),COSTCENTERID INT,NODEID INT)  
  CREATE TABLE #TBLTEMP1 (CostCenterId INT,CostCenterName nvarchar(max),NodeID INT,[Value] NVARCHAR(max),[Code] NVARCHAR(max))  
  INSERT INTO #TBLTEMP  
  SELECT CostCenterID,NODEID  FROM COM_CostCenterCostCenterMap WHERE ParentCostCenterID=@PARENTFEATUREID AND ParentNodeID=@PNodeID  
  DECLARE @COUNT INT,@I INT,@TABLENAME NVARCHAR(300),@SQL NVARCHAR(MAX),@CCID INT,@NODEID INT,@FEATURENAME NVARCHAR(300)  
  SELECT @I=1,@COUNT=COUNT(*) FROM #TBLTEMP  
  WHILE @I<=@COUNT  
  BEGIN  
   SELECT @NODEID=NODEID,@CCID=CostCenterId FROM #TBLTEMP WHERE ID=@I  
   
   if(@CCID<0)
		SELECT @FEATURENAME=NAME,@TABLENAME=TABLENAME FROM ADM_FEATURES 
		WHERE FEATUREID =-@CCID  
   else
	   SELECT @FEATURENAME=NAME,@TABLENAME=TABLENAME FROM ADM_FEATURES 
	   WHERE FEATUREID =@CCID  
      
    --IF @CCID>50000  
    IF @CCID in(7,-7)
       SET @SQL='INSERT INTO #TBLTEMP1 
       SELECT '+CONVERT(VARCHAR,@CCID)+','''+@FEATURENAME+''',UserID ,USERNAME,UserName FROM '+@TABLENAME +' WITH(NOLOCK)   
          WHERE UserID='+CONVERT(VARCHAR,@NODEID)  
    ELSE IF @CCID in(6,-6)
       SET @SQL='INSERT INTO #TBLTEMP1 
       SELECT '+CONVERT(VARCHAR,@CCID)+','''+@FEATURENAME+''',RoleID ,Name,Name FROM '+@TABLENAME +' WITH(NOLOCK)   
          WHERE RoleID='+CONVERT(VARCHAR,@NODEID)
    ELSE IF @CCID in(8,-8)
		SET @SQL='INSERT INTO #TBLTEMP1 
			SELECT Top 1 '+CONVERT(VARCHAR,@CCID)+','''+@FEATURENAME+''',CostCenterID NODEID,CostCenterName NAME,CostCenterName as Code FROM '+@TABLENAME +' WITH(NOLOCK)     
			WHERE CostCenterID='+CONVERT(VARCHAR,@NODEID)           
    ELSE IF @CCID in(300,-300)
		SET @SQL='INSERT INTO #TBLTEMP1 
    SELECT '+CONVERT(VARCHAR,@CCID)+','''+@FEATURENAME+''',CostCenterID NODEID,DOCUMENTNAME NAME,DOCUMENTABBR Code FROM '+@TABLENAME +' WITH(NOLOCK)     
          WHERE CostCenterID='+CONVERT(VARCHAR,@NODEID) 
     ELSE
    SET @SQL='INSERT INTO #TBLTEMP1 
    SELECT '+CONVERT(VARCHAR,@CCID)+','''+@FEATURENAME+''',NODEID,NAME,Code FROM '+@TABLENAME +' WITH(NOLOCK)     
          WHERE NODEID='+CONVERT(VARCHAR,@NODEID)  
    --ELSE IF @CCID=2  
    --SET @SQL='INSERT INTO #TBLTEMP1 SELECT '+CONVERT(VARCHAR,@CCID)+','''+@FEATURENAME+''',AccountID,AccountName FROM '+@TABLENAME +'   
    --      WHERE AccountID='+CONVERT(VARCHAR,@NODEID)  
    --ELSE IF @CCID=3  
    --SET @SQL='INSERT INTO #TBLTEMP1 SELECT '+CONVERT(VARCHAR,@CCID)+','''+@FEATURENAME+''',ProductId,ProductName FROM '+@TABLENAME +'   
    --      WHERE ProductId='+CONVERT(VARCHAR,@NODEID)        
    PRINT @SQL
    EXEC (@SQL)  
   SET @I=@I+1  
  END  
  SELECT * FROM #TBLTEMP1  
  DROP TABLE #TBLTEMP1  
COMMIT TRANSACTION  
SET NOCOUNT OFF;    
RETURN 1  
END TRY  
BEGIN CATCH    
 --Return exception info [Message,Number,ProcedureName,LineNumber]    
 IF ERROR_NUMBER()=50000  
 BEGIN  
  SELECT ErrorMessage,ErrorNumber FROM COM_ErrorMessages WITH(nolock) WHERE ErrorNumber=ERROR_MESSAGE() AND LanguageID=@LangID  
 END  
 ELSE  
 BEGIN  
  SELECT ErrorMessage, ERROR_MESSAGE() AS ServerMessage,ERROR_NUMBER() as ErrorNumber, ERROR_PROCEDURE()as ProcedureName, ERROR_LINE() AS ErrorLine  
  FROM COM_ErrorMessages WITH(nolock) WHERE ErrorNumber=-999 AND LanguageID=@LangID  
 END  
ROLLBACK TRANSACTION  
SET NOCOUNT OFF    
RETURN -999     
END CATCH
GO
