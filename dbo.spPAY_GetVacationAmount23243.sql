USE PACT2C276
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spPAY_GetVacationAmount23243]
	@FROMDATE [datetime],
	@TODATE [datetime],
	@EmpNode [int],
	@DOCID [int] = 0,
	@USERID [int] = 1,
	@LANGID [int] = 1
WITH ENCRYPTION, EXECUTE AS CALLER
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @GRADE INT,@GRADEWISEVACATIONPREF VARCHAR(5)
	DECLARE @TABCUSTOMIZEPAYROLL TABLE (ID INT IDENTITY(1,1),SNO INT,SNAME VARCHAR(20),EMPNODE INT,TYPEID INT,TYPENAME VARCHAR(100),COMPONENTID INT,COMPONENTNAME VARCHAR(200),PERCENTAGE DECIMAL(9,2),AMOUNT DECIMAL(9,2),ENCASH DECIMAL(9,2),EXCESSDAYSSALARY DECIMAL(9,2),FORMULA VARCHAR(100),ACTUALAMOUNT DECIMAL(9,2),PERCACTUALAMOUNT DECIMAL(9,2))
	DECLARE @TABVACATIONMGMET TABLE (ID INT IDENTITY(1,1),SNO INT,SNAME VARCHAR(20),EMPNODE INT,TYPEID INT,TYPENAME VARCHAR(100),COMPONENTID INT,COMPONENTNAME VARCHAR(200),PERCENTAGE DECIMAL(9,2),AMOUNT DECIMAL(9,2),ENCASH DECIMAL(9,2),EXCESSDAYSSALARY DECIMAL(9,2),FORMULA VARCHAR(100),ACTUALAMOUNT DECIMAL(9,2),PERCACTUALAMOUNT DECIMAL(9,2))

	--LOADING PREFERENCES BASED ON GRADE
	SELECT @GRADEWISEVACATIONPREF=ISNULL(VALUE,'False') FROM ADM_GlobalPreferences WHERE NAME='GradeWiseVacation'
	IF (@GRADEWISEVACATIONPREF='False')
	BEGIN
			SELECT @GRADE=ISNULL(CCNID53,0) FROM COM_CCCCDATA WITH(NOLOCK) WHERE COSTCENTERID=50051 AND NODEID=@EmpNode
	END
	ELSE
	BEGIN
			SELECT @GRADE=ISNULL(NODEID,0) FROM COM_CC50053 WITH(NOLOCK) WHERE CODE LIKE '%ALL%'
	END
	PRINT @GRADE
	--LOADING VACATION MANAGEMENT EARNING COMPONENTS AND DEDUCTION & LOAN COMPONENTS FROM PAYROLL COMPONENTS
	--LOADING EARNING COMPONENTS FROM VACATION MANAGEMENT JOIN WITH CUSTOMIZE PAYROLL
	INSERT INTO @TABVACATIONMGMET 
	SELECT  DISTINCT C54.SNO,'',@EmpNode,C52.PARENTID,'',TD.dcAlpha17,C52.NAME,DN.dcNum1,0,0,0,TD.dcAlpha16,0,0
	        FROM INV_DOCDETAILS ID WITH(NOLOCK),COM_DOCNUMDATA DN WITH(NOLOCK),COM_DOCTEXTDATA TD WITH(NOLOCK),COM_DOCCCDATA CC WITH(NOLOCK),COM_CC50052 C52 WITH(NOLOCK),COM_CC50054 C54 WITH(NOLOCK)
	        WHERE  ID.INVDOCDETAILSID=DN.INVDOCDETAILSID AND ID.INVDOCDETAILSID=CC.INVDOCDETAILSID AND DN.INVDOCDETAILSID=CC.INVDOCDETAILSID  AND ID.INVDOCDETAILSID=TD.INVDOCDETAILSID
		    AND C52.NODEID=TD.dcAlpha17 AND C54.GRADEID=CC.DCCCNID53 AND TD.dcAlpha17=C54.COMPONENTID  AND C54.FIELDTYPE<>'OverTime'
		    AND CC.DCCCNID53=@GRADE AND ID.COSTCENTERID=40061  and PayrollDate=(Select Max(PayrollDate) From COM_CC50054  WITH(NOLOCK))
	--LOADING DEDUCTION COMPONENTS FROM PAYROLL COMPONENTS JOIN WITH CUSTOMIZE PAYROLL		    
	INSERT INTO @TABVACATIONMGMET 
	SELECT DISTINCT C54.SNO,'',@EmpNode,C52.PARENTID ,'' ,C52.NODEID,C52.NAME,0,0,0,0,0,0,0 FROM COM_CC50052 C52 WITH(NOLOCK),COM_CC50054 C54 WITH(NOLOCK) 
	       WHERE C52.NODEID=C54.SNO AND C52.PARENTID IN (3,4) AND C54.GRADEID=@GRADE ORDER BY C52.PARENTID	
	--INSERTING NEW COMPONENT
	INSERT INTO @TABVACATIONMGMET 
	SELECT 1,'',@EmpNode,2 ,'' ,0,'EMPLOYEE_BASIC',100,0,0,0,0,0,0 
	----LOADING  EARING COMPONENTS FROM PAYROLL COMPONENTS JOIN WITH CUSTOMIZE PAYROLL
	--INSERT INTO @TABVACATIONMGMET 
	--SELECT a.sno,'',@EmpNode,B.PARENTID,'',a.componentid,b.Name,A.FORMULA,0,0,0,0,0,0
 --                           FROM COM_CC50054 a WITH(NOLOCK) 
 --                           LEFT JOIN COM_CC50052 b WITH(NOLOCK) on b.NodeID=a.ComponentID
 --                           WHERE a.GradeID=@GRADE AND DATEDIFF(DAY,PayrollDate,@FROMDATE)=0 AND ISNUMERIC(A.FORMULA)=1 AND  A.FORMULA IN (-1,-3)
 --                           Order By a.Type,a.SNo 
	--SELECT * FROM @TABVACATIONMGMET       
		       
	--LOADING EARNING AND DEDUCTION COMPONENTS FROM CUSTOMIZE PAYROLL		
	INSERT INTO @TABCUSTOMIZEPAYROLL 
	SELECT a.sno,'',@EmpNode,B.PARENTID,'',a.componentid,b.Name,0,0,0,0,0,0,0
                            FROM COM_CC50054 a WITH(NOLOCK) 
                            LEFT JOIN COM_CC50052 b WITH(NOLOCK) on b.NodeID=a.ComponentID
                            WHERE a.GradeID=@GRADE and PayrollDate=(Select Max(PayrollDate) From COM_CC50054  WITH(NOLOCK))--AND DATEDIFF(DAY,PayrollDate,@FROMDATE)=0
                            AND ISNULL(a.FIELDTYPE,'')<>'OverTime' AND A.TYPE<>4
                            Order By a.Type,a.SNo 
	--INSERTING NEW COMPONENT                            
	INSERT INTO @TABCUSTOMIZEPAYROLL 
	SELECT 0,'',@EmpNode,2 ,'' ,0,'EMPLOYEE_BASIC',100,0,0,0,0,0,0 
	
	--select * from @TABCUSTOMIZEPAYROLL
	
	UPDATE T SET T.SNAME='Earning'+CONVERT(VARCHAR,T.SNO) FROM COM_CC50054 C54 ,@TABCUSTOMIZEPAYROLL T WHERE  T.SNO=C54.SNO AND T.COMPONENTNAME <>'EMPLOYEE_BASIC' AND TYPEID=2
	UPDATE T SET T.TYPENAME=C52.NAME FROM COM_CC50052 C52,@TABCUSTOMIZEPAYROLL T WHERE  T.TYPEID=C52.NODEID
	UPDATE T SET T.ACTUALAMOUNT=EP.BASICMONTHLY FROM @TABCUSTOMIZEPAYROLL T,PAY_EMPPAY EP WHERE  T.EMPNODE=EP.EMPLOYEEID AND T.COMPONENTNAME ='EMPLOYEE_BASIC'
	UPDATE @TABVACATIONMGMET SET FORMULA=(SELECT TOP 1 FORMULA FROM @TABVACATIONMGMET) WHERE COMPONENTNAME ='EMPLOYEE_BASIC'
	UPDATE T SET T.PERCENTAGE=T1.PERCENTAGE, T.formula=T1.formula FROM @TABCUSTOMIZEPAYROLL T,@TABVACATIONMGMET T1 WHERE T.COMPONENTID=T1.COMPONENTID
	UPDATE @TABCUSTOMIZEPAYROLL SET formula=replace(formula,'Field',COMPONENTNAME)
	
		
	--LOADING EARNING COMPONENTS AND AMOUNT FROM EMPPAY TABLE AND UPDATE THE AMOUNT IN @TABCUSTOMIZEPAYROLL
	CREATE TABLE #EMPPAY(SNO INT,AMOUNT DECIMAL(9,2))
	DECLARE @DCNUMFILED VARCHAR(200)
	DECLARE @I INT,@STR VARCHAR(MAX)
	SET @I=1
	WHILE(@I<=20)
	BEGIN
		SET @DCNUMFILED='Earning'+convert(varchar,@i)
		SET @STR='INSERT INTO #EMPPAY 
				  SELECT '+ CONVERT(VARCHAR,@I) +' ,'+ @DCNUMFILED +' FROM PAY_EMPPAY WITH(NOLOCK) WHERE EMPLOYEEID='+CONVERT(VARCHAR,@EmpNode)
		EXEC sp_executesql @STR
	SET @I=@I+1
	END
	UPDATE T SET T.ACTUALAMOUNT=ep.amount FROM @TABCUSTOMIZEPAYROLL T,#EMPPAY ep WHERE  T.sno=ep.sno  and t.typeid=2 AND T.COMPONENTNAME <>'EMPLOYEE_BASIC'
	UPDATE @TABCUSTOMIZEPAYROLL SET PERCACTUALAMOUNT=(ACTUALAMOUNT*PERCENTAGE)/100 WHERE ACTUALAMOUNT>0 AND PERCENTAGE>0	
	SELECT * FROM #EMPPAY
	--LOADING ALLOW1AMOUNT '-1' DETAILS FROM APPLY VACATION
	DECLARE @ALLOW1AMOUNT DECIMAL(9,2)
	--SELECT @ALLOW1AMOUNT=ISNULL(SUM(DN.DCNUM1),0) FROM INV_DOCDETAILS ID WITH(NOLOCK),COM_DOCNUMDATA DN WITH(NOLOCK),COM_DOCCCDATA CC WITH(NOLOCK)
	--WHERE ID.INVDOCDETAILSID=DN.INVDOCDETAILSID AND ID.INVDOCDETAILSID=CC.INVDOCDETAILSID AND CC.INVDOCDETAILSID=DN.INVDOCDETAILSID 
	--AND ID.COSTCENTERID=40072 AND CC.DCCCNID51=@EmpNode
	SELECT @ALLOW1AMOUNT=ISNULL(SUM(DN.DCNUM1),0) FROM INV_DOCDETAILS ID WITH(NOLOCK),COM_DOCNUMDATA DN WITH(NOLOCK),COM_DOCCCDATA CC WITH(NOLOCK),COM_DOCTEXTDATA TD WITH(NOLOCK)
	WHERE ID.INVDOCDETAILSID=DN.INVDOCDETAILSID AND ID.INVDOCDETAILSID=CC.INVDOCDETAILSID AND CC.INVDOCDETAILSID=DN.INVDOCDETAILSID AND TD.INVDOCDETAILSID=DN.INVDOCDETAILSID AND TD.INVDOCDETAILSID=CC.INVDOCDETAILSID 	AND ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND TD.DCALPHA23=-1 
	AND ID.COSTCENTERID=40072 AND CC.DCCCNID51=@EmpNode
	
	UPDATE T SET T.ACTUALAMOUNT=ISNULL(ep.amount,0)-ISNULL(@ALLOW1AMOUNT,0) FROM @TABCUSTOMIZEPAYROLL T,#EMPPAY ep WHERE  T.sno=ep.sno  
		  and t.typeid=2 AND T.COMPONENTNAME <>'EMPLOYEE_BASIC' AND T.PERCENTAGE=-1
									
	--DELETING THE ROWS FROM @TABCUSTOMIZEPAYROLL WHOSE TYPE ID NOT IN @TABVACATIONMGMET
	--DELETE FROM @TABCUSTOMIZEPAYROLL WHERE TYPEID IN (2,5) AND COMPONENTID NOT IN (SELECT  COMPONENTID FROM @TABVACATIONMGMET WHERE TYPEID IN (2))
	
	--LOADING LOAN DETAILS
	DECLARE @TABLOANDETAILS TABLE(SNO INT IDENTITY(1,1),LOANTYPEID INT,LOANAMOUNT DECIMAL(9,2))
	INSERT INTO @TABLOANDETAILS
	SELECT CC.dcCCNID52,CONVERT(DECIMAL,DN.dcNum2)
		   FROM INV_DOCDETAILS ID WITH(NOLOCK),COM_DOCNUMDATA DN WITH(NOLOCK),COM_DOCTEXTDATA TD WITH(NOLOCK),COM_DOCCCDATA CC WITH(NOLOCK)
	       WHERE  ID.INVDOCDETAILSID=DN.INVDOCDETAILSID AND ID.INVDOCDETAILSID=CC.INVDOCDETAILSID AND DN.INVDOCDETAILSID=CC.INVDOCDETAILSID  AND ID.INVDOCDETAILSID=TD.INVDOCDETAILSID 
           AND CC.DCCCNID51=109 AND ID.COSTCENTERID=40056 AND ISDATE(TD.DCALPHA6)=1 AND CONVERT(DATETIME,TD.DCALPHA6) BETWEEN CONVERT(DATETIME,@FROMDATE) AND CONVERT(DATETIME,@TODATE)
           
	--UPDATE @TABCUSTOMIZEPAYROLL SET AMOUNT =@LOANAMOUNT ,actualamount=@LOANAMOUNT WHERE COMPONENTID=@LOANTYPE
	UPDATE CP SET CP.AMOUNT =TLD.LOANAMOUNT,CP.ACTUALAMOUNT=TLD.LOANAMOUNT FROM @TABCUSTOMIZEPAYROLL CP,@TABLOANDETAILS TLD
	WHERE CP.COMPONENTID=TLD.LOANTYPEID
	
	SELECT * FROM @TABCUSTOMIZEPAYROLL ORDER BY TYPEID,SNO 
	DROP TABLE #EMPPAY
	
SET NOCOUNT OFF;
END
GO
