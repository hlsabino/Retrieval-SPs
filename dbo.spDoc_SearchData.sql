USE PACT2C276
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spDoc_SearchData]
	@CostCenterID [int],
	@SysColName [nvarchar](100),
	@Filter [nvarchar](max),
	@IsInventory [int]
WITH ENCRYPTION, EXECUTE AS CALLER
AS
BEGIN TRY        
SET NOCOUNT ON;

DECLARE @strQry NVARCHAR(MAX)
CREATE TABLE #TEMP(ID INT IDENTITY(1,1),CostCenterID INT,DocumentName NVARCHAR(200),DocID INT,DocDate NVARCHAR(50),VoucherNo NVARCHAR(200),
				   DocPrefix NVARCHAR(100),DocNumber NVARCHAR(100))  
 
	SET @strQry=''
	SET @strQry='INSERT INTO #TEMP
					SELECT DISTINCT D.COSTCENTERID,D.DOCUMENTNAME,DOCID,
					CONVERT(NVARCHAR,CONVERT(DATETIME,DOCDATE),106) ,VoucherNo,DocPrefix,DocNumber '
	IF(@IsInventory=1)
	BEGIN
		SET @strQry=@strQry+' FROM ADM_DOCUMENTTYPES D WITH(NOLOCK),Inv_DocDetails ID WITH(NOLOCK) '
		SET @strQry=@strQry+' JOIN COM_DOCTEXTDATA TD WITH(NOLOCK) ON ID.INVDOCDETAILSID=TD.INVDOCDETAILSID '
		SET @strQry=@strQry+' JOIN COM_DOCNUMDATA ND WITH(NOLOCK) ON ID.INVDOCDETAILSID=ND.INVDOCDETAILSID '
		SET @strQry=@strQry+' JOIN COM_DOCCCDATA DC WITH(NOLOCK) ON ID.INVDOCDETAILSID=DC.INVDOCDETAILSID '			
		SET @strQry=@strQry+' WHERE D.COSTCENTERID=ID.COSTCENTERID  AND '+CONVERT(VARCHAR,@SysColName) +'='''+ CONVERT(VARCHAR,@Filter)+''''
		--AND ID.COSTCENTERID<>'+ CONVERT(VARCHAR,@CostCenterID) +'
	END
	ELSE
	BEGIN
		SET @strQry=@strQry+' FROM ADM_DOCUMENTTYPES D WITH(NOLOCK),ACC_DocDetails ID WITH(NOLOCK) '
		SET @strQry=@strQry+' JOIN COM_DOCTEXTDATA TD WITH(NOLOCK) ON ID.AccDocDetailsID=TD.AccDocDetailsID '
		SET @strQry=@strQry+' JOIN COM_DOCNUMDATA ND WITH(NOLOCK) ON ID.AccDocDetailsID=ND.AccDocDetailsID '
		SET @strQry=@strQry+' JOIN COM_DOCCCDATA DC WITH(NOLOCK) ON ID.AccDocDetailsID=DC.AccDocDetailsID '			
		SET @strQry=@strQry+' WHERE D.COSTCENTERID=ID.COSTCENTERID AND '+CONVERT(VARCHAR,@SysColName) +'='''+ CONVERT(VARCHAR,@Filter)+''''
	END
	print (@strQry)				
	EXEC (@strQry)
	SELECT * FROM #TEMP
	DELETE FROM #TEMP

SET NOCOUNT OFF;
END TRY  
BEGIN CATCH    
  --Return exception info [Message,Number,ProcedureName,LineNumber]    
  IF ERROR_NUMBER()=50000  
  BEGIN  
   SELECT ErrorMessage,ErrorNumber FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=ERROR_MESSAGE() AND LanguageID=1  
  END  
  ELSE  
  BEGIN  
   SELECT ErrorMessage, ERROR_MESSAGE() AS ServerMessage,ERROR_NUMBER() as ErrorNumber, ERROR_PROCEDURE()as ProcedureName, ERROR_LINE() AS ErrorLine  
   FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=-999 AND LanguageID=1  
  END   
SET NOCOUNT OFF    
RETURN -999     
END CATCH
GO
